// <auto-generated />
using JustMyResumeApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace JustMyResumeApi.Migrations
{
    [DbContext(typeof(JustMyResumeContext))]
    [Migration("20190415204102_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("JustMyResumeApi.Models.EducationItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Degree");

                    b.Property<string>("Description");

                    b.Property<int>("SortOrder");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("EducationItems");
                });

            modelBuilder.Entity("JustMyResumeApi.Models.Job", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Employer");

                    b.Property<string>("EndDate");

                    b.Property<string>("Role");

                    b.Property<int>("SortOrder");

                    b.Property<string>("StartDate");

                    b.Property<string>("Title");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("JustMyResumeApi.Models.Project", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DemoUrl");

                    b.Property<string>("Description");

                    b.Property<string>("GitHubUrl");

                    b.Property<string>("Name");

                    b.Property<int>("SortOrder");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("JustMyResumeApi.Models.SkillCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int>("SortOrder");

                    b.HasKey("Id");

                    b.ToTable("SkillCategories");
                });

            modelBuilder.Entity("JustMyResumeApi.Models.TechSkill", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<long>("SkillCategoryId");

                    b.Property<string>("SkillLevel");

                    b.Property<int>("SortOrder");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("SkillCategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("TechSkills");
                });

            modelBuilder.Entity("JustMyResumeApi.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Phone");

                    b.Property<string>("Phone2");

                    b.Property<string>("State");

                    b.Property<string>("StreetAddress");

                    b.Property<string>("StreetAddress2");

                    b.Property<string>("ZipCode");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("JustMyResumeApi.Models.EducationItem", b =>
                {
                    b.HasOne("JustMyResumeApi.Models.User", "User")
                        .WithMany("EducationItems")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("JustMyResumeApi.Models.Job", b =>
                {
                    b.HasOne("JustMyResumeApi.Models.User", "User")
                        .WithMany("Jobs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("JustMyResumeApi.Models.Project", b =>
                {
                    b.HasOne("JustMyResumeApi.Models.User", "User")
                        .WithMany("Projects")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("JustMyResumeApi.Models.TechSkill", b =>
                {
                    b.HasOne("JustMyResumeApi.Models.SkillCategory", "SkillCategory")
                        .WithMany()
                        .HasForeignKey("SkillCategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("JustMyResumeApi.Models.User", "User")
                        .WithMany("TechSkills")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
